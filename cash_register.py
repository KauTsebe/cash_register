# -*- coding: utf-8 -*-
"""cash_register.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14YSwXfDKgoWx8girQgcl6NLTtCAlKOrY
"""

import streamlit as st
import pandas as pd
from datetime import datetime

# Function to add a sale to the DataFrame
def add_sale(sales_data, item, quantity, price):
    new_sale = {"Item": item, "Quantity": quantity, "Price": price, "Total": quantity * price}
    sales_data = sales_data.append(new_sale, ignore_index=True)
    return sales_data

# Initialize or load sales data
if 'sales_data' not in st.session_state:
    st.session_state['sales_data'] = pd.DataFrame(columns=["Item", "Quantity", "Price", "Total"])

st.title("Cash Register App")

# Input form for sales
with st.form(key="sales_form"):
    item = st.text_input("Item Name")
    quantity = st.number_input("Quantity", min_value=1, step=1)
    price = st.number_input("Price", min_value=0.0, step=0.01)
    submit_button = st.form_submit_button(label="Add Sale")

if submit_button:
    st.session_state['sales_data'] = add_sale(st.session_state['sales_data'], item, quantity, price)
    st.success(f"Added sale of {item}.")

# Display current sales
st.subheader("Sales Data")
st.dataframe(st.session_state['sales_data'])

# Calculate total sales
total_sales = st.session_state['sales_data']['Total'].sum()
st.subheader(f"Total Sales: ${total_sales:.2f}")

# Download button for sales data
if st.button('Download Sales Data'):
    csv = st.session_state['sales_data'].to_csv(index=False)
    st.download_button(label="Download CSV", data=csv, file_name=f'sales_{datetime.now().date()}.csv', mime='text/csv')